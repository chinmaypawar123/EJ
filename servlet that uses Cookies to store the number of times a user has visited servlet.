index.html:-

<html>
<head><title>Cookie Demo</title></head>
<body>
<form action="PAGE1" >
Enter Your Name <input type="text" name="txtName"><br>
<input type="submit" value="~~~ Click to Enter ~~~">
</form>
</body>
</html>

PAGE1.java:-

package mypack1;
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
public class PAGE1 extends HttpServlet {
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        try (PrintWriter out = response.getWriter()) {
            out.println("<!DOCTYPE html>");
            out.println("<html>");
            out.println("<head>");
            out.println("<title>Servlet CookiesServlet</title>");            
            out.println("</head>");
            out.println("<body bgcolor='yellow'>");
            /*Check whether the client browser has send the cookies or not*/
            if(request.getCookies()==null)
            {
                /*If no cookies are sent by the client browser then we would like to send fresh  new cookie as count 1 */
                Cookie c1=new Cookie("vc","1");
                /*need to send cookie to client browser if the cookie is created for first time*/  
                response.addCookie(c1);
                out.println("<h1>You have visited the page for "+1+" time");
                
            }
            /*if the user is coming for the second time .Note here rc is an array of recieved cookie from client browser*/
            else
            {
                Cookie []rc=request.getCookies();
                /*This takes the value of the first cookie in the array (the one at index 0), 
                which is expected to be a number, and converts it from a string to an integer. 
                This value usually represents how many times the user has visited the page.*/
                int x=Integer.parseInt(rc[0].getValue());
                x++;
                /* send updated value to client browser by converting it back to string*/
                rc[0].setValue(""+x);
                response.addCookie(rc[0]);
                out.println("<h1>You have visited the page for"+x+" time");
            }
            out.println("</body>");
            out.println("</html>");
        }
    }

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}

















 


